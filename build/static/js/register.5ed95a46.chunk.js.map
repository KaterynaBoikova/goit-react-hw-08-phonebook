{"version":3,"sources":["Styles/RegisterViewLoginView.module.css","Views/RegisterView.js"],"names":["module","exports","RegisterView","state","name","email","password","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","submitted","component","maxWidth","className","styles","paper","avatar","variant","textReg","onSubmit","this","autoComplete","form","container","spacing","item","xs","textfield","required","id","label","type","pattern","title","onChange","fullWidth","color","btnMain","Component","connect","dispatch","userInput","authOperations","userRegister"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,oCAAoC,UAAY,yCAAyC,MAAQ,qCAAqC,OAAS,sCAAsC,QAAU,uCAAuC,QAAU,yC,4NCMnQC,E,4MACFC,MAAQ,CACJC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGdC,aAAe,SAAAC,GACX,MAAwBA,EAAMC,cAAtBL,EAAR,EAAQA,KAAMM,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBP,EAAOM,K,EAG5BE,aAAe,SAAAJ,GACXA,EAAMK,iBACN,EAAKC,MAAMC,UAAU,EAAKZ,OAC1B,EAAKQ,SAAS,CAAEP,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGnD,WACI,OACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAWU,UAAU,OAAOC,SAAS,KAArC,UACI,cAAC,IAAD,IACA,sBAAKC,UAAWC,IAAOC,MAAvB,UACJ,cAAC,IAAD,CAAQF,UAAWC,IAAOE,OAA1B,SACI,cAAC,IAAD,MAEJ,cAAC,IAAD,CAAYL,UAAU,KAAKM,QAAQ,KAAKJ,UAAWC,IAAOI,QAA1D,sBAGA,uBAAMC,SAAUC,KAAKb,aAAcc,aAAa,MAAMR,UAAWC,IAAOQ,KAAxE,UACI,eAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACJ,cAAC,IAAD,CACIb,UAAWC,IAAOa,UAClBC,UAAQ,EACRC,GAAG,oBACHC,MAAM,OACNb,QAAQ,WACRc,KAAK,OACLhC,KAAK,OACLiC,QAAQ,yHACRC,MAAM,kcACN5B,MAAOe,KAAKtB,MAAMC,KAClBmC,SAAUd,KAAKlB,iBAGf,cAAC,IAAD,CAAMuB,MAAI,EAACC,GAAI,GAAf,SACJ,cAAC,IAAD,CACIb,UAAWC,IAAOa,UAClBC,UAAQ,EACRC,GAAG,oBACHC,MAAM,QACNb,QAAQ,WACRc,KAAK,QACLhC,KAAK,QACLM,MAAOe,KAAKtB,MAAME,MAClBkC,SAAUd,KAAKlB,iBAGf,cAAC,IAAD,CAAMuB,MAAI,EAACC,GAAI,GAAf,SACJ,cAAC,IAAD,CACIb,UAAWC,IAAOa,UAClBC,UAAQ,EACRC,GAAG,oBACHC,MAAM,WACNb,QAAQ,WACRc,KAAK,WACLhC,KAAK,WACLM,MAAOe,KAAKtB,MAAMG,SAClBiC,SAAUd,KAAKlB,oBAGnB,cAAC,IAAD,CACI6B,KAAK,SACLI,WAAS,EACTlB,QAAQ,YACRmB,MAAM,UACNvB,UAAWC,IAAOuB,QALtB,qC,GAzEOC,aA8FZC,sBAAQ,MAJI,SAAAC,GAAQ,MAAK,CACpC9B,UAAW,SAAA+B,GAAS,OAAID,EAASE,IAAeC,aAAaF,QAGlDF,CAAmC1C","file":"static/js/register.5ed95a46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterViewLoginView_form__2T2bA\",\"textfield\":\"RegisterViewLoginView_textfield__2qG-k\",\"paper\":\"RegisterViewLoginView_paper__2kQ4d\",\"avatar\":\"RegisterViewLoginView_avatar__37Amm\",\"textReg\":\"RegisterViewLoginView_textReg__3JJs9\",\"btnMain\":\"RegisterViewLoginView_btnMain__3V4EJ\"};","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport authOperations from '../Redux/Authentification/auth-operations';\nimport Layout from \"../Components/Layout/Layout\";\nimport {TextField, Avatar, Typography, Grid, Container, CssBaseline, Button} from \"@material-ui/core\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport styles from '../Styles/RegisterViewLoginView.module.css';\nclass RegisterView extends Component{\n    state = {\n        name: '',\n        email: '',\n        password: '',\n    };\n\n    handleChange = event => {\n        const { name, value } = event.currentTarget;\n        this.setState({ [name]: value });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.submitted(this.state);\n        this.setState({ name: '', email: '', password: '',});\n    };\n\n    render(){\n        return(\n            <Layout>\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div className={styles.paper}>\n                <Avatar className={styles.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\" className={styles.textReg}>\n                    Register\n                </Typography>\n                <form onSubmit={this.handleSubmit} autoComplete=\"off\" className={styles.form}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                    <TextField\n                        className={styles.textfield}\n                        required\n                        id=\"outlined-required\"\n                        label=\"Name\"\n                        variant=\"outlined\"\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                    />\n                        </Grid>\n                        <Grid item xs={12}>\n                    <TextField\n                        className={styles.textfield}\n                        required\n                        id=\"outlined-required\"\n                        label=\"Email\"\n                        variant=\"outlined\"\n                        type=\"email\"\n                        name=\"email\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                    />\n                        </Grid>\n                        <Grid item xs={12}>\n                    <TextField\n                        className={styles.textfield}\n                        required\n                        id=\"outlined-required\"\n                        label=\"Password\"\n                        variant=\"outlined\"\n                        type=\"password\"\n                        name=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                    />\n                        </Grid></Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={styles.btnMain}\n                    >\n                        Register\n                    </Button>\n                </form>\n                    </div>\n                </Container>\n            </Layout>\n        )\n\n    }};\n\nconst mapDispatchToProps = dispatch => ({\n    submitted: userInput => dispatch(authOperations.userRegister(userInput)),\n});\n\nexport default connect(null, mapDispatchToProps )(RegisterView);\n\n/*without Material UI\n  <label>Name\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                            required\n                            value={this.state.name}\n                            onChange={this.handleChange}\n                        /></label>\n                    <label>Email\n                        <input\n\n                            type=\"email\"\n                            name=\"email\"\n                            required\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                        /></label>\n                    <label>Password\n                        <input\n\n                            type=\"password\"\n                            name=\"password\"\n                            required\n                            value={this.state.password}\n                            onChange={this.handleChange}\n                        /></label>\n */"],"sourceRoot":""}