{"version":3,"sources":["Styles/RegisterViewLoginView.module.css","Views/LoginView.js"],"names":["module","exports","LoginView","state","email","password","handleChange","event","currentTarget","name","value","setState","handleSubmit","preventDefault","props","submitted","component","maxWidth","className","styles","paper","avatar","variant","textReg","onSubmit","this","autoComplete","form","container","spacing","item","xs","textfield","required","id","label","type","onChange","fullWidth","color","btnMain","Component","connect","dispatch","userInput","authOperations","userLogin"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,oCAAoC,UAAY,yCAAyC,MAAQ,qCAAqC,OAAS,sCAAsC,QAAU,uCAAuC,QAAU,yC,4NCOnQC,E,4MACFC,MAAQ,CACJC,MAAO,GACPC,SAAU,I,EAGdC,aAAe,SAAAC,GACX,MAAwBA,EAAMC,cAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,K,EAI5BE,aAAe,SAAAL,GACXA,EAAMM,iBACN,EAAKC,MAAMC,UAAU,EAAKZ,OAC1B,EAAKQ,SAAS,CAAEP,MAAO,GAAIC,SAAU,M,4CAGzC,WACI,OACI,cAAC,IAAD,UAEI,eAAC,IAAD,CAAWW,UAAU,OAAOC,SAAS,KAArC,UACI,cAAC,IAAD,IACA,sBAAKC,UAAWC,IAAOC,MAAvB,UACI,cAAC,IAAD,CAAQF,UAAWC,IAAOE,OAA1B,SACI,cAAC,IAAD,MAEJ,cAAC,IAAD,CAAYL,UAAU,KAAKM,QAAQ,KAAKJ,UAAWC,IAAOI,QAA1D,mBAGA,uBAAMC,SAAUC,KAAKb,aAAcc,aAAa,MAAMR,UAAWC,IAAOQ,KAAxE,UACI,eAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CACIb,UAAWC,IAAOa,UAClBC,UAAQ,EACRC,GAAG,oBACHC,MAAM,QACNb,QAAQ,WACRc,KAAK,QACL3B,KAAK,QACLC,MAAOe,KAAKtB,MAAMC,MAClBiC,SAAUZ,KAAKnB,iBAGvB,cAAC,IAAD,CAAMwB,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CACIb,UAAWC,IAAOa,UAClBC,UAAQ,EACRC,GAAG,oBACHC,MAAM,WACNb,QAAQ,WACRc,KAAK,WACL3B,KAAK,WAC+BC,MAAOe,KAAKtB,MAAME,SACtDgC,SAAUZ,KAAKnB,oBAI3B,cAAC,IAAD,CACI8B,KAAK,SACLE,WAAS,EACThB,QAAQ,YACRiB,MAAM,UACNrB,UAAWC,IAAOqB,QALtB,kC,GA5DJC,aAkFTC,sBAAQ,MAJI,SAAAC,GAAQ,MAAK,CACpC5B,UAAW,SAAA6B,GAAS,OAAID,EAASE,IAAeC,UAAUF,QAG/CF,CAAmCxC","file":"static/js/login.83515b3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterViewLoginView_form__2T2bA\",\"textfield\":\"RegisterViewLoginView_textfield__2qG-k\",\"paper\":\"RegisterViewLoginView_paper__2kQ4d\",\"avatar\":\"RegisterViewLoginView_avatar__37Amm\",\"textReg\":\"RegisterViewLoginView_textReg__3JJs9\",\"btnMain\":\"RegisterViewLoginView_btnMain__3V4EJ\"};","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport authOperations from '../Redux/Authentification/auth-operations';\nimport Layout from \"../Components/Layout/Layout\";\nimport {Avatar, Button, Container, CssBaseline, Grid, TextField, Typography} from \"@material-ui/core\";\nimport styles from \"../Styles/RegisterViewLoginView.module.css\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nclass LoginView extends Component{\n    state = {\n        email: '',\n        password: '',\n    };\n\n    handleChange = event => {\n        const { name, value } = event.currentTarget;\n        this.setState({ [name]: value });\n    };\n\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.submitted(this.state);\n        this.setState({ email: '', password: ''});\n    };\n\n    render(){\n        return(\n            <Layout>\n\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div className={styles.paper}>\n                        <Avatar className={styles.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\" className={styles.textReg}>\n                            Login\n                        </Typography>\n                        <form onSubmit={this.handleSubmit} autoComplete=\"off\" className={styles.form}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        className={styles.textfield}\n                                        required\n                                        id=\"outlined-required\"\n                                        label=\"Email\"\n                                        variant=\"outlined\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        value={this.state.email}\n                                        onChange={this.handleChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        className={styles.textfield}\n                                        required\n                                        id=\"outlined-required\"\n                                        label=\"Password\"\n                                        variant=\"outlined\"\n                                        type=\"password\"\n                                        name=\"password\"\n                                                                            value={this.state.password}\n                                        onChange={this.handleChange}\n                                    />\n                                </Grid>\n                                </Grid>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={styles.btnMain}\n                            >\n                                Login\n                            </Button>\n                        </form>\n                    </div>\n                </Container>\n            </Layout>\n        )\n\n    }};\n\n\nconst mapDispatchToProps = dispatch => ({\n    submitted: userInput => dispatch(authOperations.userLogin(userInput)),\n});\n\nexport default connect(null, mapDispatchToProps )(LoginView);\n\n/*without UI\n            <form onSubmit={this.handleSubmit}>\n                <label>Email\n                    <input\n\n                        type=\"email\"\n                        name=\"email\"\n                        required\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                    /></label>\n                <label>Password\n                    <input\n\n                        type=\"password\"\n                        name=\"password\"\n                        required\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                    /></label>\n\n                <button\n                    type=\"submit\" >Login</button>\n            </form>\n */"],"sourceRoot":""}